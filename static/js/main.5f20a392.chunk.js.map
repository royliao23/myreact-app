{"version":3,"sources":["Components/App/display.js","Components/App/MaterialUIForm2.js","Components/App/sidebyside.js","Components/App/Navbar.js","Components/App/App.js","theme.js","serviceWorker.js","store/birds/birds.js","index.js"],"names":["columns","field","headerName","minWidth","editable","width","description","sortable","valueGetter","params","getValue","id","tokeninfo","Authorization","DataGridDemo","dispatch","useDispatch","r","useSelector","state","birds","useEffect","fetch","method","headers","then","res","json","response","type","arr","catch","error","console","log","style","height","rows","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","defaultValues","firstname","lastname","email","address","income","Form","useState","formValues","setFormValues","handleInput","e","name","target","newValue","value","onSubmit","event","preventDefault","sessionStorage","setItem","axios","post","rec","data","Grid","container","alignItems","justify","direction","item","TextField","label","onChange","Button","variant","color","marginTop","useStyles","makeStyles","paper","border","boxShadow","NestedGrid","classes","className","Container","spacing","md","Paper","Navbar","React","setValue","CssBaseline","AppBar","position","Toolbar","IconButton","edge","Typography","Tabs","_","scrollButtons","Tab","paddingInline","Box","flexGrow","index","onChangeIndex","TabPanel","props","children","other","role","hidden","sx","p","App","maxWidth","theme","createTheme","palette","primary","main","light","dark","secondary","red","A400","background","default","overrides","MuiPaper","root","padding","margin","backgroundColor","MuiButton","Boolean","window","location","hostname","match","ADD_BIRD","INCREMENT_BIRD","ADD_EMPLOYEE","SHOW_EMPLOYEE","birdApp","combineReducers","action","bird","views","find","b","filter","store","createStore","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5f20a392.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';//yarn add @material-ui/data-grid\r\nimport {  useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nconst columns = [\r\n  \r\n \r\n  { field: 'id', headerName: 'ID', minWidth: 45, },\r\n  {\r\n    field: 'firstname',\r\n    headerName: 'First name',\r\n    minWidth: 150,\r\n    editable: true,\r\n  },\r\n  \r\n  {\r\n    field: 'lastname',\r\n    headerName: 'Last name',\r\n    minWidth: 150,\r\n    editable: true,\r\n    \r\n  },\r\n  { field: 'email', headerName: 'Email', editable: true, width: 140,},\r\n  {\r\n    field: 'address',\r\n    headerName: 'Address',\r\n    width: 140,\r\n    editable: true,\r\n  },\r\n  { field: 'income', headerName: 'Income', minWidth: 135,editable: true, },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    minWidth: 135,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(params.id, 'firstname') || ''} ${\r\n        params.getValue(params.id, 'lastname') || ''\r\n      }`,\r\n  },\r\n];\r\n\r\n\r\nconst API_URL='https://royliao.pythonanywhere.com/medical/employees/?format=json'\r\nconst tokeninfo={Authorization: \"Token \t8854d62680edf3c63c27ee8bf6d2c320cb902f51\"}\r\nexport default function DataGridDemo() {\r\n  \r\n  const dispatch = useDispatch();\r\n  const r = useSelector(state => state.birds);\r\n  useEffect(() => {\r\n    fetch(\r\n      API_URL,\r\n      {\r\n        method: \"GET\",\r\n        headers: tokeninfo,\r\n\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => {\r\n       dispatch({type: \"SHOW_EMPLOYEE\", arr: response});\r\n       \r\n      })\r\n      .catch(error => console.log(error));\r\n  }, \"errors\");\r\n  console.log(\"state:\")\r\n  console.log(r)\r\n     \r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid \r\n        \r\n        rows={r}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n       \r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from 'axios';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst defaultValues = {\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  email: \"\",\r\n  address:\"\",\r\n  income: \"\",\r\n};\r\nconst Form = () => {\r\n  const [formValues, setFormValues] = useState(defaultValues);\r\n  const dispatch = useDispatch();\r\n  const handleInput = e => {\r\n    const name = e.target.name;\r\n    const newValue = e.target.value;\r\n    setFormValues({ \r\n      ...formValues,\r\n      [name]: newValue \r\n    });\r\n  };\r\n  const tokeninfo={Authorization: \"Token \t8854d62680edf3c63c27ee8bf6d2c320cb902f51\"}\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    sessionStorage.setItem('added', '')\r\n    console.log(formValues);\r\n    \r\n    \r\n    axios.post('https://royliao.pythonanywhere.com/medical/employees/',formValues,{headers: tokeninfo}).then((response)=>\r\n    {dispatch({type: \"ADD_EMPLOYEE\", rec: response.data});\r\n    console.log(\"add the reco:\");\r\n    console.log(response);\r\n    \r\n    sessionStorage.setItem('added', response.data)\r\n    setFormValues(defaultValues);\r\n    \r\n  });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} >\r\n      <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\r\n        <Grid item>\r\n          <TextField\r\n            id=\"firstname-input\"\r\n            name=\"firstname\"\r\n            label=\"firstname\"\r\n            type=\"text\"\r\n            value={formValues.firstname}\r\n            onChange={handleInput}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            id=\"lastname-input\"\r\n            name=\"lastname\"\r\n            label=\"lastname\"\r\n            type=\"text\"\r\n            value={formValues.lastname}\r\n            onChange={handleInput}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            id=\"email-input\"\r\n            name=\"email\"\r\n            label=\"email\"\r\n            type=\"text\"\r\n            value={formValues.email}\r\n            onChange={handleInput}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            id=\"address-input\"\r\n            name=\"address\"\r\n            label=\"address\"\r\n            type=\"text\"\r\n            value={formValues.address}\r\n            onChange={handleInput}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            id=\"income-input\"\r\n            name=\"income\"\r\n            label=\"income\"\r\n            type=\"text\"\r\n            value={formValues.income}\r\n            onChange={handleInput}\r\n          />\r\n        </Grid>\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" style={{marginTop: '55px'}} type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n     \r\n    </form>\r\n  );\r\n};\r\nexport default Form;","import React from \"react\";\r\nimport DataGridDemo from './display.js';\r\nimport Form from './MaterialUIForm2.js';\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    width: \"100%\",\r\n    height: \"96.4%\",\r\n    border:\"none\",\r\n    boxShadow: \"none\",\r\n  },\r\n  \r\n  \r\n});\r\nexport default function NestedGrid() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"nest\">\r\n      <Container style={{ marginTop: \"1em\" }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item container alignItems=\"center\" md={3}>\r\n            <Paper className={classes.paper}>\r\n              <Form />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item container alignItems=\"center\" md={9}>\r\n            <Paper className={classes.paper}><DataGridDemo  /></Paper>\r\n          </Grid>    \r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport NestedGrid from './sidebyside.js';\r\nimport BasicMenu from './menulist.js';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  CssBaseline,\r\n  Box,\r\n  Tabs,\r\n  \r\n  Tab,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nexport default function Navbar() {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (_, newValue) => setValue(newValue);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" style={{height:\"80px\", width:\"99.2%\"}}>\r\n        <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n           \r\n        </IconButton>\r\n        <Typography variant=\"h6\">Awesome App</Typography>\r\n        <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"on\"\r\n        style={{ width:\"80%\"}}\r\n        aria-label=\"scrollable\"\r\n      >\r\n            <Tab label=\"Home\" style={{  minWidth: \"7%\", paddingInline:'2%' }} />\r\n            <Tab label=\"About\" style={{  minWidth: \"7%\", paddingInline:'2%' }}/>\r\n            <Tab label=\"Contact\" style={{  minWidth: \"7%\", paddingInline:'2%' }} />\r\n            <Tab label=\"Four\" style={{  minWidth: \"7%\", paddingInline:'2%' }} />\r\n            <Tab label=\"Five\" style={{  minWidth: \"7%\", paddingInline:'2%' }} />\r\n            <Tab label=\"Six\" style={{  minWidth: \"7%\", paddingInline:'2%' }} />\r\n        </Tabs>\r\n        <Box flexGrow={1} />\r\n        <Button color=\"inherit\" >Login</Button>    \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div index={value} onChangeIndex={setValue}>\r\n        <TabPanel value={value} index={0}>\r\n          <NestedGrid />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <NestedGrid />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={2}>\r\n          Item Three\r\n\r\n          <NestedGrid />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={3}>\r\n          Item 4\r\n          <NestedGrid />\r\n\r\n          afkhhak\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={4}>\r\n          Item 5\r\n          <NestedGrid />\r\n\r\n          afkhhak\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={5}>\r\n          Item \r\n          <NestedGrid />\r\n        </TabPanel>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value !== index} {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Container from '@material-ui/core/Container';\nimport { Paper } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <Container maxWidth=\"xl\" className=\"App\">\n     \n      <Paper>\n        <Navbar />\n      </Paper>\n      \n    </Container>\n  );\n}\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n// A custom theme for this app\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#61dafb',\r\n      light: '#61dafb',\r\n      dark: '#21a1c4',\r\n    },\r\n    secondary: {\r\n      main: '#b5ecfb',\r\n      light: '#61dafb',\r\n      dark: '#21a1c4',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#282c34',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        padding: '10px 5px',\r\n        margin: '5px',\r\n        backgroundColor: '#fff', // 5d737e\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        margin: '5px',\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nconst ADD_BIRD = 'ADD_BIRD';\r\nconst INCREMENT_BIRD = 'INCREMENT_BIRD';\r\nconst ADD_EMPLOYEE = 'ADD_EMPLOYEE';\r\nconst SHOW_EMPLOYEE = 'SHOW_EMPLOYEE';\r\nexport function addBird(bird) {\r\n  return {\r\n    type: ADD_BIRD,\r\n    bird,\r\n  }\r\n}\r\nexport function addEmployee(rec) {\r\n    return {\r\n      type: ADD_EMPLOYEE,\r\n      rec,\r\n    }\r\n  }\r\nexport function showEmployee(arr) {\r\n    return {\r\n      type: SHOW_EMPLOYEE,\r\n      arr,\r\n    }\r\n  }\r\n\r\nexport function incrementBird(bird) {\r\n  return {\r\n    type: INCREMENT_BIRD,\r\n    bird\r\n  }\r\n}\r\n\r\nconst defaultBirds = [\r\n \r\n];\r\n\r\nfunction birds(state=[], action) {\r\n  switch (action.type) {\r\n    case ADD_BIRD:\r\n      return [\r\n        ...state,\r\n        {\r\n          name: action.bird,\r\n          views: 1\r\n        }\r\n      ];\r\n    case ADD_EMPLOYEE:\r\n      return [\r\n        ...state,\r\n        \r\n        action.rec\r\n        \r\n      ];\r\n    case SHOW_EMPLOYEE:\r\n        return action.arr\r\n    \r\n    case INCREMENT_BIRD:\r\n      const bird = state.find(b => action.bird === b.name);\r\n      const birds = state.filter(b => action.bird !== b.name);\r\n      return [\r\n        ...birds,\r\n        {\r\n          ...bird,\r\n          views: bird.views + 1\r\n        }\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst birdApp = combineReducers({\r\n  birds\r\n});\r\n\r\nexport default birdApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './Components/App/App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport birdApp from './store/birds/birds';\n\nif (process.env.NODE_ENV === 'development') {\n  const { worker } = require('./mocks/browser')\n  worker.start()\n}\n\nconst store = createStore(birdApp);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <ThemeProvider theme={theme}>\n      <App />\n     </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}